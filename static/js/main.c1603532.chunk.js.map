{"version":3,"sources":["components/styles.module.css","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/fetchDataApi.js","App.js","index.js"],"names":["module","exports","Searchbar","onHandleSubmit","useState","query","setQuery","className","st","SearchForm","onSubmit","e","preventDefault","trim","toast","info","type","SearchForm_button","SearchForm_button_label","SearchForm_input","value","autoComplete","autoFocus","placeholder","onChange","target","Preloader","Button","color","height","width","rootModal","document","querySelector","Modal","largeImageURL","onToggleModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","onClick","currentTarget","src","alt","ImageGalleryItem","webformatURL","tags","onOpenModal","ImageGalleryItem_image","ImageGallery","images","map","id","img","LoadMore","onLoadMore","fetchDataApi","page","a","axios","get","data","hits","App","setImages","setLargeImageURL","setPage","error","setError","isLoading","setIsLoading","showModal","setShowModal","fetchImages","request","length","prevImages","toggleModal","scrollPage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","newSearch","message","dataset","source","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1603532.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__2RUCl\",\"Searchbar\":\"styles_Searchbar__3KhNn\",\"SearchForm\":\"styles_SearchForm__1zWMT\",\"SearchForm_button\":\"styles_SearchForm_button__1KqnC\",\"SearchForm_button_label\":\"styles_SearchForm_button_label__za8bn\",\"SearchForm_input\":\"styles_SearchForm_input__2dL8O\",\"ImageGallery\":\"styles_ImageGallery__36S2l\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3v73n\",\"ImageGalleryItem_image\":\"styles_ImageGalleryItem_image__1UWwM\",\"Overlay\":\"styles_Overlay__39LZB\",\"Modal\":\"styles_Modal__1gIi5\",\"Button\":\"styles_Button__1Aw3X\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport st from '../styles.module.css';\n\nfunction Searchbar({ onHandleSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.info('ðŸ˜± Please enter a value for search images!');\n    }\n    onHandleSubmit(query);\n    setQuery('');\n  };\n\n \n    return (\n      <header className={st.Searchbar}>\n        <form className={st.SearchForm} onSubmit={onSubmit}>\n          <button type=\"submit\" className={st.SearchForm_button}>\n            <span className={st.SearchForm_button_label}>Search</span>\n          </button>\n\n          <input\n            className={st.SearchForm_input}\n            type=\"text\"\n            value={query}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={({ target }) => setQuery(target.value)}\n          />\n        </form>\n      </header>\n    );\n  }\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import Loader from 'react-loader-spinner';\nimport st from '../styles.module.css';\n\nexport default function Preloader() {\n  return (\n    <div className={st.Button}>\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n}","  \nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport st from '../styles.module.css';\n\nconst rootModal = document.querySelector('#rootModal');\n\nfunction Modal({ largeImageURL, onToggleModal }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onToggleModal]);\n\n const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onToggleModal();\n    }\n  };\n\n    return createPortal(\n      <div className={st.Overlay} onClick={handleBackdropClick}>\n        <div className={st.Modal}> \n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      rootModal,\n    );\n  }\n\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default Modal;","import PropTypes from 'prop-types';\n\nimport st from '../styles.module.css';\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags,  onOpenModal }) {\n  return (\n    <li className={st.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        className={st.ImageGalleryItem_image}\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;","import st from '../styles.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={st.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          className={st.img}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onOpenPicture: PropTypes.func,\n};\n\nexport default ImageGallery;","import st from '../styles.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function LoadMore({ onLoadMore }) {\n  return (\n    <div className=\"wrapper\">\n      <button className={st.Button} type=\"button\" onClick={onLoadMore}>\n        Load More\n      </button>\n    </div>\n  );\n}\n\nLoadMore.propTypes = {\n  onLoadMore: PropTypes.func,\n};","import axios from 'axios';\n\nconst fetchDataApi = async (query, page) => {\n  const { data } = await axios.get(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=18963132-a5d8582da162d4c0f5ee62384&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return data.hits;\n};\n\nexport default fetchDataApi;","import { useState, useEffect } from 'react';\n\nimport st from './components/styles.module.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\n\nimport fetchDataApi from './services/fetchDataApi';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchImages = async () => {\n      try {\n        const request = await fetchDataApi(query, page);\n        if (request.length === 0) {\n          return setError(`No results were found for ${query}!`);\n        }\n        setImages(prevImages => [...prevImages, ...request]);\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [page, query]);\n\n  const searchImages = newSearch => {\n    setQuery(newSearch);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 800);\n  };\n\n  return (\n    <div className={st.App}>\n      <Searchbar onHandleSubmit={searchImages} />\n\n      {error && <p>{error.message}</p>}\n\n      {images.length > 0 && (\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && images.length >= 12 && !error && (\n        <Button onLoadMore={onLoadMore} />\n      )}\n\n      {showModal && (\n        <Modal\n          onToggleModal={toggleModal}\n          largeImageURL={largeImageURL}\n        ></Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// export class App extends Component {\n//   state = {\n//     gallery: [],\n//     searchQuery: '',\n//     page: 1,\n//     showModal: false,\n//     showLoader: false,\n//     error: null,\n//     largeImage: {},\n//     total: 0,\n//   };\n\n//   componentDidMount() {\n//     this.setState({ showLoader: true });\n//     this.fetchGallary();\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevQuery = prevState.searchQuery;\n//     const naxtQuery = this.state.searchQuery;\n//     if (prevQuery !== naxtQuery) {\n//       this.fetchGallary();\n//     }\n//   }\n\n//   fetchGallary = () => {\n//     const { searchQuery, page } = this.state;\n//     this.setState({ showLoader: true });\n\n//     fetchDataApi(searchQuery, page)\n//       .then(({ hits, total }) => {\n//         this.setState(prevState => ({\n//           gallery: [...prevState.gallery, ...hits],\n//           page: prevState.page + 1,\n//           total,\n//         }));\n//         this.scrollToDown();\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ showLoader: false }));\n//   };\n\n//   scrollToDown = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   handleFormSubmit = searchQuery => {\n//     if (this.state.searchQuery === searchQuery) {\n//       return;\n//     }\n//     this.setState({ searchQuery, gallery: [], page: 1 });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(prevState => ({\n//       showModal: !prevState.showModal,\n//     }));\n//   };\n\n//   handleOpenPicture = largeImage => {\n//     this.setState({ largeImage });\n//     this.toggleModal();\n//   };\n\n//   showLoadMore = () => {\n//     const { total, page } = this.state;\n//     return Math.ceil(total / 12) !== page - 1;\n//   };\n\n//   render() {\n//     const { error, showLoader, showModal, gallery, largeImage } = this.state;\n//     const showLoadMore = this.showLoadMore();\n//     return (\n//       <div className={st.App}>\n//         <Searchbar onSubmit={this.handleFormSubmit} />\n\n//         {error && <p>{error.message}</p>}\n\n//         {gallery.length > 0 && (\n//           <ImageGallery\n//             gallery={gallery}\n//             onOpenPicture={this.handleOpenPicture}\n//           />\n//         )}\n\n//         {showLoader && <Loader />}\n\n//         {gallery.length > 0 && !showLoader && showLoadMore && (\n//           <Button onLoadMore={this.fetchGallary} />\n//         )}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal}>\n//             <img src={largeImage.largeImageURL} alt={largeImage.tags} />\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}